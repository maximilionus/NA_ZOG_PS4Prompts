import sys
from pathlib import Path
from getpass import getpass
from subprocess import call, DEVNULL
from shutil import copy, rmtree


__version__ = '2.0 Beta 1'


def get_internal_dir() -> Path:
    """
    Get working directory based on pyinstaller detection
    """
    if getattr(sys, 'frozen', False):
        return Path(sys._MEIPASS)
    else:
        return Path(__file__).parent


def clear_temp():
    if TEMP_DIR.exists():
        rmtree(TEMP_DIR)
        notice_me('–í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞')


EXECUTABLE_DIR = Path(sys.executable).parent
GAME_DATA_UI_DIR = Path('data/ui/')

if GAME_DATA_UI_DIR.exists():
    # Detect if executable located in root of the game dir
    # And switch to game directory with required files
    EXECUTABLE_DIR = EXECUTABLE_DIR / GAME_DATA_UI_DIR

INTERNAL_DIR = get_internal_dir()
TEMP_DIR = EXECUTABLE_DIR / Path('.tmp/')
PATH_BIN = INTERNAL_DIR / Path('bin/')

PS4_PROMPTS_DIR = INTERNAL_DIR / Path('ps4_prompts/')

QUICKBMS_DIR = PATH_BIN / Path('./quickbms/')
QUICKBMS_EXEC = QUICKBMS_DIR / Path('quickbms.exe')
QUICKBMS_SCRIPT_DTT = QUICKBMS_DIR / Path('scripts/dtt.bms')

DTT_FILES = (
    EXECUTABLE_DIR / Path('ui_core_us.dtt'),
    EXECUTABLE_DIR / Path('ui_option_us.dtt')
)


def main():
    # Ensure required .dtt files 're on place
    notice_me('–ü—Ä–æ–≤–µ—Ä—è—é, —á—Ç–æ –≤—Å–µ –Ω—É–∂–Ω–æ–µ –Ω–∞ –º–µ—Å—Ç–µ')
    missing = [file for file in DTT_FILES if not file.exists()]
    if len(missing) > 0:
        print("–î–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–µ—Ä–∏–∫—Ç–æ—Ä–∏–∏:")
        for missing_file in missing:
            print('  ', missing_file.name)
        return 0

    # Extract .dtt
    notice_me('–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–≥—Ä–æ–≤—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤')
    for file in DTT_FILES:
        call_command([QUICKBMS_EXEC, '-Y', QUICKBMS_SCRIPT_DTT, file, TEMP_DIR / file.name[:-4]])

    notice_me('–ü–µ—Ä–µ–º–µ—â–∞—é PS4 –∏–∫–æ–Ω–∫–∏ –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤')
    copy(PS4_PROMPTS_DIR / 'ui_core_us_00000080.dds', TEMP_DIR / 'ui_core_us')
    copy(PS4_PROMPTS_DIR / 'ui_option_us_00000080.dds', TEMP_DIR / 'ui_option_us')

    # Inject the changes into the original .dtt archives
    notice_me('–í—à–∏–≤–∞—é –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∞—Ä—Ö–∏–≤—ã')
    for file in DTT_FILES:
        call_command([QUICKBMS_EXEC, '-Y', '-w', '-r', QUICKBMS_SCRIPT_DTT, file, TEMP_DIR / file.name[:-4]])

    notice_me('–ì–æ—Ç–æ–≤–æ! –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...')
    clear_temp()


def show_intro():
    print('NieR: Automata - RUS ZOG')
    print('PS4 Prompts Patcher')
    print(f'\nversion: {__version__}')
    print('by @maximilionus <maximilionuss@gmail.com>')
    print('\n–î–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∏–≥—Ä—ã –∏–ª–∏ –∂–µ –≤ –ø–∞–ø–∫–µ "<NIER>\\data\\ui"\n')


def notice_me(text: str):
    """
    Make the print noticeable
    """
    print('üëâ ', text)


def call_command(args=[], output=DEVNULL):
    call(args, stdout=output, stderr=output)


def pause():
    if getattr(sys, 'frozen', False):
        getpass('Press "Enter" to exit')


if __name__ == '__main__':
    show_intro()
    main()
    pause()
